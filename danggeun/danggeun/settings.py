"""
Django settings for danggeun project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import json, os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.sites",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'channels',
    'channels_redis',
    "market",
    # 구글 로그인을 위한 social_django 추가
    "social_django",
    # 카카오 로그인을 위한 앱 추가
    
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.kakao",
]
ASGI_APPLICATION  =  'danggeun.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

with open('config.json', 'r') as f:
    json_data = json.load(f)
    db_key = json_data['POSTGRESQL_KEY']
    secret_key = json_data['SECRET_KEY']
    google_social_key = json_data['SOCIAL_AUTH_GOOGLE_OAUTH2_KEY']
    google_social_secret = json_data['SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET']
    naver_social_key = json_data['SOCIAL_AUTH_NAVER_KEY']
    naver_social_secret = json_data['SOCIAL_AUTH_NAVER_SECRET']
    oepnai_api_key = json_data['OPENAI_API_KEY']

OPENAI_API_KEY = oepnai_api_key

# 구글 로그인을 위한 API 키 및 REDIRECT_URI 작성
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = (
    google_social_key
)
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = google_social_secret
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = "http://127.0.0.1:8000/complete/google-oauth2/"

SOCIAL_AUTH_AUTHENTICATION_BACKENDS = [
    'social_core.backends.naver.NaverOAuth2',
    'social_core.backends.google.GoogleOAuth2',
]
      
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'social_core.backends.naver.NaverOAuth2',
)

# 네이버 소셜 로그인 설정
SOCIAL_AUTH_NAVER_KEY = naver_social_key
SOCIAL_AUTH_NAVER_SECRET = naver_social_secret
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "main"
ACCOUNT_LOGOUT_REDIRECT_URL = 'main'

# 카카오 소셜 로그인 설정
SITE_ID = 2
SOCIALACCOUNT_LOGIN_ON_GET = True
ACCOUNT_LOGOUT_ON_GET = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'danggeun.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'danggeun.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


    
SECRET_KEY = secret_key
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "danggeun",
        'USER': "postgres",
        "PASSWORD" : db_key,
        "HOST" : "oreumi-dangun.cyxsnajbfbeu.ap-northeast-2.rds.amazonaws.com",
        "PORT": "5432",
    }
}


LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'auth.User'

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ko-KR'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'